name: Update Pharmacy Data

on:
  schedule:
    - cron: '50 21 * * *'  # 22:30 Casablanca time
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 python-dateutil pytz

    - name: Run pharmacy data update script
      run: |
        cd src/scripts
        cat > run_script.py << 'EOL'
        import os
        import time
        import pytz
        from datetime import datetime

        # Set timezone to Casablanca
        casablanca_tz = pytz.timezone('Africa/Casablanca')
        current_time = datetime.now(casablanca_tz)
        print(f"Current Casablanca time: {current_time}")

        # Import and run main script
        import datahi
        datahi.main()
        EOL
        
        python -u run_script.py
        
        if [ -f pharmacies_*.json ]; then
          mv pharmacies_*.json ../data/pharmacyData.json
          echo "File moved successfully"
        else
          echo "No pharmacy data file generated!"
          exit 1
        fi

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Commit and push changes
      run: |
        # Get current date in Casablanca timezone
        CURRENT_DATE=$(TZ=Africa/Casablanca date +'%Y-%m-%d')
        
        # Check for changes
        if [[ -n "$(git status --porcelain src/data/pharmacyData.json)" ]]; then
          echo "Changes detected in pharmacyData.json"
          
          # Stage and commit changes
          git add src/data/pharmacyData.json
          git commit -m "Update pharmacy data for ${CURRENT_DATE} (Casablanca time)"
          
          # Push changes with retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if git pull --rebase origin main && git push origin main; then
              echo "Successfully pushed changes"
              break
            else
              RETRY_COUNT=$((RETRY_COUNT + 1))
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "Push failed, retrying... (Attempt $RETRY_COUNT of $MAX_RETRIES)"
                sleep 5
              else
                echo "Failed to push after $MAX_RETRIES attempts"
                exit 1
              fi
            fi
          done
        else
          echo "No changes to pharmacyData.json"
        fi


