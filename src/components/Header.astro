---
// Header & Navigation UI displayed on each page.

import LocaleSelect from "@/components/i18n/LocaleSelect.astro";
import { useTranslations, type Lang } from "@/i18n";
import { getRelativeLocaleUrl } from "astro:i18n";
import Logo from "./Logo.astro";

const t = useTranslations(Astro.currentLocale as Lang);
const locale = Astro.currentLocale as Lang;

const isActive = (path: string) =>
  getRelativeLocaleUrl(locale, path) === Astro.url.pathname;
---

<header class="header">
  <div class="header-content">
    <h1>
      <a href={getRelativeLocaleUrl(locale, "/")} class="logo-link">
        <Logo size="large" />
      </a>
    </h1>
  </div>

  <LocaleSelect />

  <nav class="l-content">
    <ul>
      <li>
        <a
          href={getRelativeLocaleUrl(locale, "/")}
          class={isActive("/") ? "active" : null}
        >
          {
            t({
              fr: "Accueil",
              en: "Home",
              ar: "الرئيسية",
            })
          }
        </a>
      </li>
      <li>
        <a
          href={getRelativeLocaleUrl(locale, "/blog")}
          class={isActive("/blog") ? "active" : null}
        >
          {
            t({
              fr: "Blog",
              en: "Blog",
              ar: "المدونة",
            })
          }
        </a>
      </li>
      <li>
        <a
          href={getRelativeLocaleUrl(locale, "/contact-us")}
          class={isActive("/contact-us") ? "active" : null}
        >
          {
            t({
              fr: "Contactez-nous",
              en: "Contact Us",
              ar: "اتصل بنا",
            })
          }
        </a>
      </li>

      <li>
        <a
          href={getRelativeLocaleUrl(locale, "/about")}
          class={isActive("/about") ? "active" : null}
        >
          {t({ 
            fr: "À propos", 
            en: "About", 
            ar: "من نحن" 
          })}
        </a>
      </li>
    </ul>
  </nav>
</header>

<style>
  * {
    flex-wrap: wrap;
    justify-content: center;
  }

  header {
    display: grid;
    place-items: center;
    gap: var(--sp-s);
  }

  h1 {
    margin-block-start: var(--sp-l);
    margin-block-end: var(--sp-s); /* Reduced space below the logo */
    margin-inline-start: -0.5em;
    font-size: 40px;
    font-family: var(--english-font);
    font-weight: 900;
    @media (width < 480px) {
      font-size: 28px;
    }

    a {
      display: flex;
      align-items: center;
    }
    img {
      width: 350px; /* Increased width */
      height: auto; /* Maintain aspect ratio */
      position: relative;
      inset: 0.1em;
    }
  }

  nav {
    display: flex;
    align-items: center;
    gap: var(--sp-m);
  }
  ul {
    display: flex;
    gap: var(--sp-s);
    margin-block-start: var(--sp-s);

    a {
      font-size: 1.05rem;
      display: block;
      font-weight: 600;
      letter-spacing: 0.05em;
      padding-block: 0.2em;
      padding-inline: 0.4em;
      border-radius: 4px;
      &:hover,
      &:active {
        background-color: color-mix(
          in srgb,
          var(--color-theme) 5%,
          transparent
        );
      }
      &.active {
        pointer-events: none;
        color: var(--color-theme);
      }
      .material-icons-sharp {
        opacity: 0.6;
        margin-inline-start: -0.2em;
        font-size: 0.9em;
      }
    }
  }

  .header {
    padding: 1rem;
    background: rgb(0, 0, 0);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .header-content {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
  }

  .logo-link {
    display: block;
    text-decoration: none;
    padding: 0.5rem;
    transition: transform 0.2s ease;
  }

  .logo-link:hover {
    transform: scale(1.05);
  }

  .logo {
    max-width: 300px;
    height: auto;
  }

  @media (max-width: 640px) {
    .logo {
      max-width: 200px;
    }

    ul {
      flex-wrap: wrap;
      justify-content: center;
      gap: 0.5rem;
    }

    a {
      padding: 0.3em 0.6em;
      font-size: 1rem !important;
    }
  }
</style>