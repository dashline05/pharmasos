---
import Layout from "@/layouts/Base.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { validLanguages, type ValidLanguage, defaultLanguage } from '@/constants/languages';

type BlogEntry = CollectionEntry<'blog'>;

export const prerender = true;

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  return validLanguages.map(lang => ({
    params: { lang },
    props: { posts: allPosts }
  }));
}

interface Props {
  posts: BlogEntry[];
}

const { posts } = Astro.props;
const { lang } = Astro.params;
const currentLang = validLanguages.includes(lang as ValidLanguage) ? lang as ValidLanguage : defaultLanguage;

const translations = {
  title: {
    fr: "Blog",
    en: "Blog",
    ar: "المدونة"
  }
} as const;

// Filter posts for current language
const languagePosts = posts.filter(post => post.id.startsWith(currentLang + '/'));
---

<Layout title={translations.title[currentLang]}>
  <div class="blog-page">
    <h1>{translations.title[currentLang]}</h1>
    <ul>
      {languagePosts.map((post) => (
        <li>
          <a href={`/${currentLang}/blog/${post.id.split('/').pop()}`}>{post.data.title}</a>
        </li>
      ))}
    </ul>
  </div>
</Layout>

<style>
  .blog-page {
    padding: 2rem;
  }

  h1 {
    text-align: center;
    margin-bottom: 2rem;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  }

  li {
    margin-bottom: 1rem;
  }

  a {
    color: inherit;
    text-decoration: none;
    padding: 1rem;
    display: block;
    background: #1a1a1a;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
  }

  a:hover {
    background: #222;
    transform: translateY(-2px);
  }

  /* RTL support for Arabic */
  [dir="rtl"] .blog-page {
    direction: rtl;
  }
</style>