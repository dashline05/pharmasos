---
import Layout from "@/layouts/Base.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { validLanguages, type ValidLanguage, defaultLanguage } from '@/constants/languages';

type BlogEntry = CollectionEntry<'blog'>;

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  return validLanguages.flatMap(lang => 
    posts
      .filter(post => post.id.startsWith(lang + '/'))
      .map(post => ({
        params: { 
          lang,
          id: post.id.split('/').slice(1).join('/')
        },
        props: { entry: post }
      }))
  );
}

interface Props {
  entry: BlogEntry;
}

const { entry } = Astro.props;
const { lang } = Astro.params;
const currentLang = validLanguages.includes(lang as ValidLanguage) ? lang as ValidLanguage : defaultLanguage;

const translations = {
  title: {
    fr: "Article",
    en: "Post",
    ar: "مقال"
  }
} as const;
---

<Layout title={`${entry.data.title} - ${translations.title[currentLang]}`}>
  <article class="blog-post">
    <h1>{entry.data.title}</h1>
    {entry.data.description && <p class="description">{entry.data.description}</p>}
    <div class="content">
      <slot />
    </div>
  </article>
</Layout>

<style>
  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    text-align: center;
  }

  .description {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 2rem;
    text-align: center;
  }

  .content {
    line-height: 1.6;
  }

  /* RTL support for Arabic */
  [dir="rtl"] .blog-post {
    direction: rtl;
  }
</style>